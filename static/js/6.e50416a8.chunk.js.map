{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","ComicsList","props","_useState","useState","_useState2","_slicedToArray","offset","setOffset","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","comicsList","setComicsList","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","items","map","item","i","_jsx","className","children","_jsxs","Link","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","display","onClick","ComicsPage","_Fragment","AppBanner"],"mappings":"2JAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,6IIgE/EC,EA9DI,SAACC,GACnB,IAAAC,EAA4BC,mBAAS,KAAIC,EAAAC,YAAAH,EAAA,GAAlCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,EAA4CL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,EAAoCT,mBAAS,IAAGU,EAAAR,YAAAO,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,EAAsCb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,EAAyCC,cAAjCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,aAExBC,qBAAU,WACTC,EAAUpB,GAAQ,KAChB,IAEH,IAAMoB,EAAY,SAACpB,EAAQqB,GAChBhB,GAAVgB,GACAH,EAAalB,GAAQsB,KAAKC,IAGrBA,EAAqB,SAACC,GAC3B,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IAC1BD,GAAQ,GAGThB,EAAc,GAADkB,OAAA7C,YAAK0B,GAAU1B,YAAK0C,KACjCnB,GAAkB,SAACD,GAAc,OAAK,KACtCH,EAAUD,EAAS,GACnBa,EAAeY,IAmBhB,IAAMG,EAhBN,SAAqB7C,GACpB,IAAM6C,EAAQ7C,EAAI8C,KAAI,SAACC,EAAMC,GAC5B,OACCC,cAAA,MAAIC,UAAU,eAAcC,SAC3BC,eAACC,IAAI,CAACC,GAAE,WAAAV,OAAaG,EAAKQ,IAAKJ,SAAA,CAC9BF,cAAA,OAAKO,IAAKT,EAAKU,UAAWC,IAAI,eAAeR,UAAU,qBACvDD,cAAA,OAAKC,UAAU,oBAAmBC,SAAEJ,EAAKY,QACzCP,eAAA,OAAKF,UAAU,qBAAoBC,SAAA,CAAEJ,EAAKa,MAAM,YAJhBZ,MAUpC,OAAOC,cAAA,MAAIC,UAAU,eAAcC,SAAEN,IAGxBgB,CAAYpC,GAEpBqC,EAAe5B,EAAQe,cAACc,IAAY,IAAM,KAC1CC,EAAU/B,IAAYZ,EAAiB4B,cAACgB,IAAO,IAAM,KAE3D,OACCb,eAAA,OAAKF,UAAU,eAAcC,SAAA,CAC3BW,EACAE,EACAnB,EACDI,cAAA,UAAQiB,SAAU7C,EAAgB8C,MAAO,CAAEC,QAASvC,EAAc,OAAS,SAAWqB,UAAU,mCAAmCmB,QAAS,kBAAMhC,EAAUpB,IAAQkC,SACnKF,cAAA,OAAKC,UAAU,QAAOC,SAAC,oBCnDZmB,UATI,WAClB,OACClB,eAAAmB,WAAA,CAAApB,SAAA,CACCF,cAACuB,IAAS,IACVvB,cAACtC,EAAU","file":"static/js/6.e50416a8.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import \"./comicsList.scss\";\nimport { Link } from \"react-router-dom\";\nimport useMarvelService from \"../../services/MarvelServices\";\nimport { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nconst ComicsList = (props) => {\n\tconst [offset, setOffset] = useState(210);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\n\tconst { loading, error, getAllComics } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllComics(offset).then(onComicsListLoaded);\n\t};\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false;\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetComicsList([...comicsList, ...newComicsList]);\n\t\tsetNewItemLoading((newItemLoading) => false);\n\t\tsetOffset(offset + 8);\n\t\tsetComicsEnded(ended);\n\t};\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n\t\t\t\t<li className=\"comics__item\" key={i}>\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\" />\n\t\t\t\t\t\t<div className=\"comics__item-name\">{item.title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{item.price} $</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\n\t\treturn <ul className=\"comics__grid\">{items}</ul>;\n\t}\n\n\tconst items = renderItems(comicsList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className=\"comics__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button disabled={newItemLoading} style={{ display: comicsEnded ? \"none\" : \"block\" }} className=\"button button__main button__long\" onClick={() => onRequest(offset)}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default ComicsList;\n","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner />\r\n\t\t\t<ComicsList />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}