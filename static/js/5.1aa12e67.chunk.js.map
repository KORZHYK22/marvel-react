{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelServices.js","hooks/http.hooks.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/CharSearchForm/CharSearchForm.js","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","_ref2","_callee2","name","_context2","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getCharacter","_ref4","_callee4","id","_context4","_x2","getComic","_ref5","_callee5","_context5","_x3","comics","_comics$textObjects$","title","description","thumbnail","path","extension","pageCount","language","textObjects","price","prices","char","slice","homepage","urls","wiki","items","View","imgStyle","_jsxs","className","children","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","ref","i","tabIndex","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","forwardRef","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","value","errorInfo","console","log","this","setState","Component","CharSearchForm","Link","to","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","component","MainPage","selectedChar","_ref$current","scrollIntoView","behavior","decoration"],"mappings":"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","file":"static/js/5.1aa12e67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n\treturn <img style={{ display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\" }} src={img} alt=\"Error\" />;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hooks\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, error, clearError, request } = useHttp();\r\n\r\n\tconst _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n\tconst _apiKey = \"apikey=58e8360b38a88134dd5765053b2023c1\";\r\n\tconst _baseOffset = 210;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}comics?limit=8&offset=210&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : \"No information about the number of pages\",\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}` : \"Not avalible\",\r\n\t\t};\r\n\t};\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : \"There is no description for this character\",\r\n\t\t\tthumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\treturn { loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic, getCharacterByName };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(async (url, method = \"GET\", body = null, headers = { \"Content-Type\": \"application/json\" }) => {\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method, body, headers });\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch (e) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(e.message);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn { loading, error, clearError, request };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\nimport useMarvelService from \"../../services/MarvelServices\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState({});\n\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t\tconst timerId = setInterval(updateChar, 60000);\n\n\t\treturn () => {\n\t\t\tclearInterval(timerId);\n\t\t};\n\t}, []);\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\tconst updateChar = () => {\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\t\tgetCharacter(id).then(onCharLoaded);\n\t};\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(error || loading) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className=\"randomchar__title\">Or choose another one</p>\n\t\t\t\t<button className=\"button button__main\">\n\t\t\t\t\t<div className=\"inner\" onClick={updateChar}>\n\t\t\t\t\t\ttry it\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, description, homepage, wiki, thumbnail } = char;\n\tlet imgStyle = { objectFit: \"cover\" };\n\tif (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n\t\timgStyle = { objectFit: \"contain\" };\n\t}\n\treturn (\n\t\t<div className=\"randomchar__block\">\n\t\t\t<img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle} />\n\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t<p className=\"randomchar__descr\">{description}</p>\n\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default RandomChar;\n","import \"./charList.scss\";\nimport { useState, useEffect, useRef } from \"react\";\nimport useMarvelService from \"../../services/MarvelServices\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport PropTypes from \"prop-types\";\n\nconst CharList = (props) => {\n\tconst [charList, setCharList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst { loading, error, getAllCharacters } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllCharacters(offset).then(onCharListLoaded);\n\t};\n\n\tconst onCharListLoaded = (newCharList) => {\n\t\tlet ended = false;\n\t\tif (newCharList < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharList((charList) => [...charList, ...newCharList]);\n\t\tsetNewItemLoading((newItemLoading) => false);\n\t\tsetOffset((offset) => offset + 9);\n\t\tsetCharEnded((charEnded) => ended);\n\t};\n\n\tconst itemRefs = useRef([]);\n\n\tconst focusOnItem = (id) => {\n\t\titemRefs.current.forEach((item) => item.classList.remove(\"char__item_selected\"));\n\t\titemRefs.current[id].classList.add(\"char__item_selected\");\n\t\titemRefs.current[id].focus();\n\t};\n\n\tfunction renderItems(arr, ref) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: \"cover\" };\n\t\t\tif (item.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n\t\t\t\timgStyle = { objectFit: \"unset\" };\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName=\"char__item\"\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={(el) => (itemRefs.current[i] = el)}\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\tif (e.key === \" \" || e.key === \"Enter\") {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tfocusOnItem(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle} />\n\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t</li>\n\t\t\t);\n\t\t});\n\t\treturn <ul className=\"char__grid\">{items}</ul>;\n\t}\n\n\tconst items = renderItems(charList);\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button className=\"button button__main button__long\" disabled={newItemLoading} style={{ display: charEnded ? \"none\" : \"block\" }} onClick={() => onRequest(offset)}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useEffect, useState } from \"react\";\nimport useMarvelService from \"../../services/MarvelServices\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport \"./charInfo.scss\";\nimport PropTypes from \"prop-types\";\nimport { forwardRef } from \"react\";\n\nconst CharInfo = (props, ref) => {\n\tconst [char, setChar] = useState(null);\n\n\tconst { loading, error, getCharacter, clearError } = useMarvelService();\n\n\tuseEffect(() => {\n\t\tupdateChar();\n\t}, [props.charId]);\n\n\tconst updateChar = () => {\n\t\tconst { charId } = props;\n\t\tif (!charId) {\n\t\t\treturn;\n\t\t}\n\t\tclearError();\n\t\tgetCharacter(charId).then(onCharLoaded);\n\t};\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t};\n\n\tconst skeleton = char || loading || error ? null : <Skeleton />;\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(error || !char || loading) ? <View char={char} /> : null;\n\n\treturn (\n\t\t<div className=\"char__info\" ref={ref}>\n\t\t\t{skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</div>\n\t);\n};\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = char;\n\tlet imgStyle = { objectFit: \"cover\" };\n\tif (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\n\t\timgStyle = { objectFit: \"contain\" };\n\t}\n\treturn (\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"char__descr\">{description}</div>\n\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t<ul className=\"char__comics-list\">\n\t\t\t\t{comics.length > 0 ? null : \"There is no comics with this character\"}\n\t\t\t\t{comics.map((item, i) => {\n\t\t\t\t\t// eslint-disable-next-line\n\t\t\t\t\tif (i > 9) return;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className=\"char__comics-item\">\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t);\n};\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n};\n\nexport default forwardRef(CharInfo);\n","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t};\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({\r\n\t\t\terror: true,\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage />;\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport useMarvelService from \"../../services/MarvelServices\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nimport \"./charSearchForm.scss\";\r\n\r\nconst CharSearchForm = () => {\r\n\tconst [char, setChar] = useState(null);\r\n\tconst { loading, error, getCharacterByName, clearError } = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t};\r\n\r\n\tconst updateChar = (name) => {\r\n\t\tclearError();\r\n\r\n\t\tgetCharacterByName(name).then(onCharLoaded);\r\n\t};\r\n\r\n\tconst errorMessage = error ? (\r\n\t\t<div className=\"char__search-critical-error\">\r\n\t\t\t<ErrorMessage />\r\n\t\t</div>\r\n\t) : null;\r\n\tconst results = !char ? null : char.length > 0 ? (\r\n\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t<div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n\t\t\t<Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\r\n\t\t\t\t<div className=\"inner\">To page</div>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className=\"char__search-error\">The character was not found. Check the name and try again</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"char__search-form\">\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tcharName: \"\",\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\t\tcharName: Yup.string().required(\"This field is required\"),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={({ charName }) => {\r\n\t\t\t\t\tupdateChar(charName);\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<label className=\"char__search-label\" htmlFor=\"charName\">\r\n\t\t\t\t\t\tOr find a character by name:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t\t\t\t<Field id=\"charName\" name=\"charName\" type=\"text\" placeholder=\"Enter name\" />\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"button button__main\" disabled={loading}>\r\n\t\t\t\t\t\t\t<div className=\"inner\">find</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t\t{results}\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CharSearchForm;\r\n","import { useState, useRef } from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from \"../../resources/img/vision.png\";\r\nimport CharSearchForm from \"../CharSearchForm/CharSearchForm\";\r\n\r\nconst MainPage = () => {\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\tconst ref = useRef(null);\r\n\r\n\tconst onCharSelected = (id) => {\r\n\t\tsetChar(id);\r\n\t\tref.current?.scrollIntoView({ behavior: \"smooth\" });\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<div className=\"char__select\">\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharSearchForm />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharInfo charId={selectedChar} ref={ref} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}